//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.2032.
// 
namespace SecurityManager.EPAuthority {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://jmjtech.com/")]
    public class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        public CustomerInformation CustomerInformationValue;
        
        /// <remarks/>
        public Service() {
            this.Url = "https://www.jmjtech.com/EPAuthority/Service.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CustomerInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://jmjtech.com/CreateNewUser", RequestNamespace="http://jmjtech.com/", ResponseNamespace="http://jmjtech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CreateUserStatus CreateNewUser(string PrivilegedUser, string PrivilegedPassword, string UserName, string Password, string Email, string Question, string Answer) {
            object[] results = this.Invoke("CreateNewUser", new object[] {
                        PrivilegedUser,
                        PrivilegedPassword,
                        UserName,
                        Password,
                        Email,
                        Question,
                        Answer});
            return ((CreateUserStatus)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateNewUser(string PrivilegedUser, string PrivilegedPassword, string UserName, string Password, string Email, string Question, string Answer, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateNewUser", new object[] {
                        PrivilegedUser,
                        PrivilegedPassword,
                        UserName,
                        Password,
                        Email,
                        Question,
                        Answer}, callback, asyncState);
        }
        
        /// <remarks/>
        public CreateUserStatus EndCreateNewUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CreateUserStatus)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CustomerInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://jmjtech.com/AuthenticateUser", RequestNamespace="http://jmjtech.com/", ResponseNamespace="http://jmjtech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AuthenticateStatus AuthenticateUser(string UserName, string Password) {
            object[] results = this.Invoke("AuthenticateUser", new object[] {
                        UserName,
                        Password});
            return ((AuthenticateStatus)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAuthenticateUser(string UserName, string Password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AuthenticateUser", new object[] {
                        UserName,
                        Password}, callback, asyncState);
        }
        
        /// <remarks/>
        public AuthenticateStatus EndAuthenticateUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AuthenticateStatus)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CustomerInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://jmjtech.com/ChangePassword", RequestNamespace="http://jmjtech.com/", ResponseNamespace="http://jmjtech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChangePassword(string UserName, string Password, string NewPassword) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        UserName,
                        Password,
                        NewPassword});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangePassword(string UserName, string Password, string NewPassword, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangePassword", new object[] {
                        UserName,
                        Password,
                        NewPassword}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndChangePassword(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CustomerInformationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://jmjtech.com/ResetPassword", RequestNamespace="http://jmjtech.com/", ResponseNamespace="http://jmjtech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ResetPassword(string PrivilegedUser, string PrivilegedPassword, string UserToReset) {
            object[] results = this.Invoke("ResetPassword", new object[] {
                        PrivilegedUser,
                        PrivilegedPassword,
                        UserToReset});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginResetPassword(string PrivilegedUser, string PrivilegedPassword, string UserToReset, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ResetPassword", new object[] {
                        PrivilegedUser,
                        PrivilegedPassword,
                        UserToReset}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndResetPassword(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://jmjtech.com/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://jmjtech.com/", IsNullable=false)]
    public class CustomerInformation : System.Web.Services.Protocols.SoapHeader {
        
        /// <remarks/>
        public int CustomerID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://jmjtech.com/")]
    public class AuthenticateStatus {
        
        /// <remarks/>
        public bool UserAuthenticated;
        
        /// <remarks/>
        public string Notification;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://jmjtech.com/")]
    public enum CreateUserStatus {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        UnknownFailure,
        
        /// <remarks/>
        DuplicateEmail,
        
        /// <remarks/>
        DuplicateUserName,
        
        /// <remarks/>
        InvalidAnswer,
        
        /// <remarks/>
        InvalidEmail,
        
        /// <remarks/>
        InvalidPassword,
        
        /// <remarks/>
        InvalidQuestion,
        
        /// <remarks/>
        InvalidUserName,
        
        /// <remarks/>
        AuthenticationFailure,
        
        /// <remarks/>
        SetRoleFailure,
        
        /// <remarks/>
        SetCustomerIDFailure,
    }
}
