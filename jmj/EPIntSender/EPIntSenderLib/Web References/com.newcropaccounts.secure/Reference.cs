//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.2032.
// 
namespace EPIntSenderLib.com.newcropaccounts.secure {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PharmacySoap", Namespace="https://secure.newcropaccounts.com/V5/webservices")]
    public class Pharmacy : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public Pharmacy() {
            this.Url = "https://secure.newcropaccounts.com/v5/WebServices/Pharmacy.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V5/webservices/PharmacySearch", RequestNamespace="https://secure.newcropaccounts.com/V5/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V5/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PharmacyDetailResult PharmacySearch(Credentials credentials, AccountRequest accountRequest, string postalCode, string phoneNumber, string streetName, string pharmacyName, string state) {
            object[] results = this.Invoke("PharmacySearch", new object[] {
                        credentials,
                        accountRequest,
                        postalCode,
                        phoneNumber,
                        streetName,
                        pharmacyName,
                        state});
            return ((PharmacyDetailResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPharmacySearch(Credentials credentials, AccountRequest accountRequest, string postalCode, string phoneNumber, string streetName, string pharmacyName, string state, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PharmacySearch", new object[] {
                        credentials,
                        accountRequest,
                        postalCode,
                        phoneNumber,
                        streetName,
                        pharmacyName,
                        state}, callback, asyncState);
        }
        
        /// <remarks/>
        public PharmacyDetailResult EndPharmacySearch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PharmacyDetailResult)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V5/webservices/GetRenewalRequests", RequestNamespace="https://secure.newcropaccounts.com/V5/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V5/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RenewalDetailResult GetRenewalRequests(Credentials credentials, AccountRequest accountRequest, string locationID, string licensedPrescriberID) {
            object[] results = this.Invoke("GetRenewalRequests", new object[] {
                        credentials,
                        accountRequest,
                        locationID,
                        licensedPrescriberID});
            return ((RenewalDetailResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRenewalRequests(Credentials credentials, AccountRequest accountRequest, string locationID, string licensedPrescriberID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRenewalRequests", new object[] {
                        credentials,
                        accountRequest,
                        locationID,
                        licensedPrescriberID}, callback, asyncState);
        }
        
        /// <remarks/>
        public RenewalDetailResult EndGetRenewalRequests(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RenewalDetailResult)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V5/webservices/SendToPharmacy", RequestNamespace="https://secure.newcropaccounts.com/V5/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V5/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PrescriptionDetailResult SendToPharmacy(Credentials credentials, AccountRequest accountRequest, string xmlIn) {
            object[] results = this.Invoke("SendToPharmacy", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn});
            return ((PrescriptionDetailResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSendToPharmacy(Credentials credentials, AccountRequest accountRequest, string xmlIn, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SendToPharmacy", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn}, callback, asyncState);
        }
        
        /// <remarks/>
        public PrescriptionDetailResult EndSendToPharmacy(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PrescriptionDetailResult)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V5/webservices/SendRenewalToPharmacy", RequestNamespace="https://secure.newcropaccounts.com/V5/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V5/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result SendRenewalToPharmacy(Credentials credentials, AccountRequest accountRequest, string xmlIn) {
            object[] results = this.Invoke("SendRenewalToPharmacy", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSendRenewalToPharmacy(Credentials credentials, AccountRequest accountRequest, string xmlIn, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SendRenewalToPharmacy", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn}, callback, asyncState);
        }
        
        /// <remarks/>
        public Result EndSendRenewalToPharmacy(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Result)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V5/webservices")]
    public class Credentials {
        
        /// <remarks/>
        public string PartnerName;
        
        /// <remarks/>
        public string Name;
        
        /// <remarks/>
        public string Password;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V5/webservices")]
    public class PrescriptionDetail {
        
        /// <remarks/>
        public string TransactionID;
        
        /// <remarks/>
        public string Status;
        
        /// <remarks/>
        public string Message;
        
        /// <remarks/>
        public string StatusTimestamp;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V5/webservices")]
    public class PrescriptionDetailResult {
        
        /// <remarks/>
        public Result result;
        
        /// <remarks/>
        public PrescriptionDetail prescriptionDetail;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V5/webservices")]
    public class Result {
        
        /// <remarks/>
        public StatusType Status;
        
        /// <remarks/>
        public string Message;
        
        /// <remarks/>
        public string XmlResponse;
        
        /// <remarks/>
        public int RowCount;
        
        /// <remarks/>
        public int Timing;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V5/webservices")]
    public enum StatusType {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        Fail,
        
        /// <remarks/>
        NotFound,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV5")]
    public class PrescriptionRenewalRequestType {
        
        /// <remarks/>
        public string pharmacyIdentifier;
        
        /// <remarks/>
        public string drugNDC;
        
        /// <remarks/>
        public string drug;
        
        /// <remarks/>
        public string dispenseNumber;
        
        /// <remarks/>
        public string dosage;
        
        /// <remarks/>
        public string lastFillDate;
        
        /// <remarks/>
        public string writtenDate;
        
        /// <remarks/>
        public string daysSupply;
        
        /// <remarks/>
        public DrugSubstitutionType substitution;
        
        /// <remarks/>
        public string refills;
        
        /// <remarks/>
        public string pharmacistMessage;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV5:NCStandard")]
    public enum DrugSubstitutionType {
        
        /// <remarks/>
        DispenseAsWritten,
        
        /// <remarks/>
        SubstitutionAllowed,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV5")]
    public class PatientDiagnosisType {
        
        /// <remarks/>
        public string diagnosisID;
        
        /// <remarks/>
        public DiagnosisType diagnosisType;
        
        /// <remarks/>
        public string onsetDate;
        
        /// <remarks/>
        public string diagnosisName;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV5:NCStandard")]
    public enum DiagnosisType {
        
        /// <remarks/>
        ICD9,
        
        /// <remarks/>
        ICD9CM,
        
        /// <remarks/>
        ICD10,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV5")]
    public class PatientHealthplanType {
        
        /// <remarks/>
        public string healthplanID;
        
        /// <remarks/>
        public HealthplanType healthplanTypeID;
        
        /// <remarks/>
        public string group;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV5:NCStandard")]
    public enum HealthplanType {
        
        /// <remarks/>
        Summary,
        
        /// <remarks/>
        Detail,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV5")]
    public class PatientAllergyType {
        
        /// <remarks/>
        public string allergyID;
        
        /// <remarks/>
        public DrugDatabaseType allergyTypeID;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV5:NCStandard")]
    public enum DrugDatabaseType {
        
        /// <remarks/>
        FDA,
        
        /// <remarks/>
        FDB,
        
        /// <remarks/>
        RXNORM,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV5")]
    public class PatientCharacteristicsType {
        
        /// <remarks/>
        public string dob;
        
        /// <remarks/>
        public GenderType gender;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool genderSpecified;
        
        /// <remarks/>
        public string height;
        
        /// <remarks/>
        public string heightUnits;
        
        /// <remarks/>
        public string weight;
        
        /// <remarks/>
        public string weightUnits;
        
        /// <remarks/>
        public LanguageType language;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool languageSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV5:NCStandard")]
    public enum GenderType {
        
        /// <remarks/>
        M,
        
        /// <remarks/>
        F,
        
        /// <remarks/>
        U,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV5:NCStandard")]
    public enum LanguageType {
        
        /// <remarks/>
        Arabic,
        
        /// <remarks/>
        Chinese,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Chinese (Simplified)")]
        ChineseSimplified,
        
        /// <remarks/>
        Creole,
        
        /// <remarks/>
        English,
        
        /// <remarks/>
        French,
        
        /// <remarks/>
        German,
        
        /// <remarks/>
        Greek,
        
        /// <remarks/>
        Italian,
        
        /// <remarks/>
        Japanese,
        
        /// <remarks/>
        Korean,
        
        /// <remarks/>
        Polish,
        
        /// <remarks/>
        Portuguese,
        
        /// <remarks/>
        Russian,
        
        /// <remarks/>
        Spanish,
        
        /// <remarks/>
        Tagalog,
        
        /// <remarks/>
        Turkish,
        
        /// <remarks/>
        Vietnamese,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV5")]
    public class ContactType {
        
        /// <remarks/>
        public string homeTelephone;
        
        /// <remarks/>
        public string workTelephone;
        
        /// <remarks/>
        public string cellularTelephone;
        
        /// <remarks/>
        public string pagerTelephone;
        
        /// <remarks/>
        public string fax;
        
        /// <remarks/>
        public string email;
        
        /// <remarks/>
        public string backOfficeTelephone;
        
        /// <remarks/>
        public string backOfficeFax;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV5")]
    public class AddressOptionalType {
        
        /// <remarks/>
        public string address1;
        
        /// <remarks/>
        public string address2;
        
        /// <remarks/>
        public string city;
        
        /// <remarks/>
        public string state;
        
        /// <remarks/>
        public string zip;
        
        /// <remarks/>
        public string zip4;
        
        /// <remarks/>
        public string country;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV5")]
    public class PatientType {
        
        /// <remarks/>
        public PersonNameType PatientName;
        
        /// <remarks/>
        public string medicalRecordNumber;
        
        /// <remarks/>
        public string socialSecurityNumber;
        
        /// <remarks/>
        public string memo;
        
        /// <remarks/>
        public AddressOptionalType PatientAddress;
        
        /// <remarks/>
        public ContactType PatientContact;
        
        /// <remarks/>
        public PatientCharacteristicsType PatientCharacteristics;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PatientAllergies")]
        public PatientAllergyType[] PatientAllergies;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PatientHealthplans")]
        public PatientHealthplanType[] PatientHealthplans;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PatientDiagnosis")]
        public PatientDiagnosisType[] PatientDiagnosis;
        
        /// <remarks/>
        public string PatientDiagnosisSearch;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV5")]
    public class PersonNameType {
        
        /// <remarks/>
        public string last;
        
        /// <remarks/>
        public string first;
        
        /// <remarks/>
        public string middle;
        
        /// <remarks/>
        public PersonNamePrefix prefix;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool prefixSpecified;
        
        /// <remarks/>
        public PersonNameSuffix suffix;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool suffixSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV5:NCStandard")]
    public enum PersonNamePrefix {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Ms.")]
        Ms,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Ms")]
        Ms1,
        
        /// <remarks/>
        Miss,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mr.")]
        Mr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mr")]
        Mr1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mrs.")]
        Mrs,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mrs")]
        Mrs1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dr.")]
        Dr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dr")]
        Dr1,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV5:NCStandard")]
    public enum PersonNameSuffix {
        
        /// <remarks/>
        DDS,
        
        /// <remarks/>
        DO,
        
        /// <remarks/>
        Jr,
        
        /// <remarks/>
        LVN,
        
        /// <remarks/>
        MD,
        
        /// <remarks/>
        NP,
        
        /// <remarks/>
        PA,
        
        /// <remarks/>
        RN,
        
        /// <remarks/>
        Sr,
        
        /// <remarks/>
        II,
        
        /// <remarks/>
        III,
        
        /// <remarks/>
        PhD,
        
        /// <remarks/>
        PharmD,
        
        /// <remarks/>
        RPh,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV5")]
    public class StaffType {
        
        /// <remarks/>
        public PersonNameType StaffName;
        
        /// <remarks/>
        public string license;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV5")]
    public class LicensedPrescriberType {
        
        /// <remarks/>
        public PersonNameType LicensedPrescriberName;
        
        /// <remarks/>
        public string dea;
        
        /// <remarks/>
        public PrescriberStatus prescriberStatus;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool prescriberStatusSpecified;
        
        /// <remarks/>
        public string upin;
        
        /// <remarks/>
        public string licenseState;
        
        /// <remarks/>
        public string licenseNumber;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV5:NCStandard")]
    public enum PrescriberStatus {
        
        /// <remarks/>
        Active,
        
        /// <remarks/>
        Inactive,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV5")]
    public class LocationType {
        
        /// <remarks/>
        public string locationName;
        
        /// <remarks/>
        public string locationShortName;
        
        /// <remarks/>
        public AddressType LocationAddress;
        
        /// <remarks/>
        public string primaryPhoneNumber;
        
        /// <remarks/>
        public string primaryFaxNumber;
        
        /// <remarks/>
        public string pharmacyContactNumber;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV5")]
    public class AddressType {
        
        /// <remarks/>
        public string address1;
        
        /// <remarks/>
        public string address2;
        
        /// <remarks/>
        public string city;
        
        /// <remarks/>
        public string state;
        
        /// <remarks/>
        public string zip;
        
        /// <remarks/>
        public string zip4;
        
        /// <remarks/>
        public string country;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV5")]
    public class AccountType {
        
        /// <remarks/>
        public string accountName;
        
        /// <remarks/>
        public string siteID;
        
        /// <remarks/>
        public AddressType AccountAddress;
        
        /// <remarks/>
        public string accountPrimaryPhoneNumber;
        
        /// <remarks/>
        public string accountPrimaryFaxNumber;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV5")]
    public class CredentialsType {
        
        /// <remarks/>
        public string partnerName;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public string password;
        
        /// <remarks/>
        public string productName;
        
        /// <remarks/>
        public string productVersion;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV5")]
    public class NCRenewal {
        
        /// <remarks/>
        public CredentialsType Credentials;
        
        /// <remarks/>
        public AccountType Account;
        
        /// <remarks/>
        public LocationType Location;
        
        /// <remarks/>
        public LicensedPrescriberType LicensedPrescriber;
        
        /// <remarks/>
        public StaffType Staff;
        
        /// <remarks/>
        public PatientType Patient;
        
        /// <remarks/>
        public PrescriptionRenewalRequestType PrescriptionRenewalRequest;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V5/webservices")]
    public class RenewalDetailResult {
        
        /// <remarks/>
        public Result result;
        
        /// <remarks/>
        public NCRenewal renewal;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V5/webservices")]
    public class PharmacyDetail {
        
        /// <remarks/>
        public string ncpdpID;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public string address1;
        
        /// <remarks/>
        public string address2;
        
        /// <remarks/>
        public string city;
        
        /// <remarks/>
        public string state;
        
        /// <remarks/>
        public string zip;
        
        /// <remarks/>
        public string phone;
        
        /// <remarks/>
        public string fax;
        
        /// <remarks/>
        public string pharmacyType;
        
        /// <remarks/>
        public string status;
        
        /// <remarks/>
        public string touchDate;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V5/webservices")]
    public class PharmacyDetailResult {
        
        /// <remarks/>
        public Result result;
        
        /// <remarks/>
        public PharmacyDetail[] pharmacyDetailArray;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V5/webservices")]
    public class AccountRequest {
        
        /// <remarks/>
        public string AccountId;
        
        /// <remarks/>
        public string SiteId;
    }
}
