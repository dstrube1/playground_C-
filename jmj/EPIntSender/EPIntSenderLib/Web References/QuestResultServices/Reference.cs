//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.2032.
// 
namespace EPIntSenderLib.QuestResultServices {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ResultsServicePort", Namespace="http://medplus.com/resultsHub/observations")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ProviderAccount))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(HL7Message))]
    public class ResultsService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public ResultsService() {
            this.Url = "https://hubservices.medplus.com:443/resultsHub/observations/hl7";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://medplus.com/resultsHub/observations", ResponseNamespace="http://medplus.com/resultsHub/observations")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public ResultsResponse getResults(ResultsRequest resultsRequest) {
            object[] results = this.Invoke("getResults", new object[] {
                        resultsRequest});
            return ((ResultsResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetResults(ResultsRequest resultsRequest, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getResults", new object[] {
                        resultsRequest}, callback, asyncState);
        }
        
        /// <remarks/>
        public ResultsResponse EndgetResults(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ResultsResponse)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://medplus.com/resultsHub/observations", ResponseNamespace="http://medplus.com/resultsHub/observations")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public ResultsResponse getMoreResults(string requestId) {
            object[] results = this.Invoke("getMoreResults", new object[] {
                        requestId});
            return ((ResultsResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetMoreResults(string requestId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getMoreResults", new object[] {
                        requestId}, callback, asyncState);
        }
        
        /// <remarks/>
        public ResultsResponse EndgetMoreResults(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ResultsResponse)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://medplus.com/resultsHub/observations", ResponseNamespace="http://medplus.com/resultsHub/observations")]
        public void acknowledgeResults(string requestId, string[] acknowledgeMessages) {
            this.Invoke("acknowledgeResults", new object[] {
                        requestId,
                        acknowledgeMessages});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginacknowledgeResults(string requestId, string[] acknowledgeMessages, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("acknowledgeResults", new object[] {
                        requestId,
                        acknowledgeMessages}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndacknowledgeResults(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://medplus.com/resultsHub/observations", ResponseNamespace="http://medplus.com/resultsHub/observations")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HL7ResultsResponse getHL7Results(ResultsRequest resultsRequest) {
            object[] results = this.Invoke("getHL7Results", new object[] {
                        resultsRequest});
            return ((HL7ResultsResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetHL7Results(ResultsRequest resultsRequest, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getHL7Results", new object[] {
                        resultsRequest}, callback, asyncState);
        }
        
        /// <remarks/>
        public HL7ResultsResponse EndgetHL7Results(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((HL7ResultsResponse)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://medplus.com/resultsHub/observations", ResponseNamespace="http://medplus.com/resultsHub/observations")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HL7ResultsResponse getMoreHL7Results(string requestId) {
            object[] results = this.Invoke("getMoreHL7Results", new object[] {
                        requestId});
            return ((HL7ResultsResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetMoreHL7Results(string requestId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getMoreHL7Results", new object[] {
                        requestId}, callback, asyncState);
        }
        
        /// <remarks/>
        public HL7ResultsResponse EndgetMoreHL7Results(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((HL7ResultsResponse)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://medplus.com/resultsHub/observations", ResponseNamespace="http://medplus.com/resultsHub/observations")]
        public void acknowledgeHL7Results(string requestId, HL7Message[] acknowledgeMessages) {
            this.Invoke("acknowledgeHL7Results", new object[] {
                        requestId,
                        acknowledgeMessages});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginacknowledgeHL7Results(string requestId, HL7Message[] acknowledgeMessages, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("acknowledgeHL7Results", new object[] {
                        requestId,
                        acknowledgeMessages}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndacknowledgeHL7Results(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://medplus.com/resultsHub/observations", ResponseNamespace="http://medplus.com/resultsHub/observations")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public ProviderAccount[] getProviderAccounts() {
            object[] results = this.Invoke("getProviderAccounts", new object[0]);
            return ((ProviderAccount[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetProviderAccounts(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getProviderAccounts", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public ProviderAccount[] EndgetProviderAccounts(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ProviderAccount[])(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ResultsRequest", "java:com.medplus.serviceHub.results.webservice")]
    public class ResultsRequest {
        
        /// <remarks/>
        public string endDate;
        
        /// <remarks/>
        public int maxMessages;
        
        /// <remarks/>
        public string[] providerAccountIds;
        
        /// <remarks/>
        public bool retrieveFinalsOnly;
        
        /// <remarks/>
        public bool retrieveObsoleteResults;
        
        /// <remarks/>
        public string startDate;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("Provider", "java:com.medplus.serviceHub.results.webservice")]
    public class Provider {
        
        /// <remarks/>
        public string description;
        
        /// <remarks/>
        public string name;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ProviderAccount", "java:com.medplus.serviceHub.results.webservice")]
    public class ProviderAccount {
        
        /// <remarks/>
        public string accountId;
        
        /// <remarks/>
        public string accountName;
        
        /// <remarks/>
        public string description;
        
        /// <remarks/>
        public string descriptiveName;
        
        /// <remarks/>
        public string internalId;
        
        /// <remarks/>
        public Provider provider;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("HL7Message", "java:com.medplus.serviceHub.results.webservice")]
    public class HL7Message {
        
        /// <remarks/>
        public string controlId;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")]
        public System.Byte[] message;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("HL7ResultsResponse", "java:com.medplus.serviceHub.results.webservice")]
    public class HL7ResultsResponse {
        
        /// <remarks/>
        public HL7Message[] HL7Messages;
        
        /// <remarks/>
        public bool isMore;
        
        /// <remarks/>
        public string requestId;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("ResultsResponse", "java:com.medplus.serviceHub.results.webservice")]
    public class ResultsResponse {
        
        /// <remarks/>
        public string[] HL7Messages;
        
        /// <remarks/>
        public bool isMore;
        
        /// <remarks/>
        public string requestId;
    }
}
