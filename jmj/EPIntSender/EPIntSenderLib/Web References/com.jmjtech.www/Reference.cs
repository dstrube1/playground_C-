//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.2032.
// 
namespace EPIntSenderLib.com.jmjtech.www {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        public CredentialsHeader CredentialsHeaderValue;
        
        /// <remarks/>
        public Service() {
            this.Url = "https://www.jmjtech.com/EPIEGateway/Service.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CredentialsHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PutMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PutMessage(string JMJMessage) {
            object[] results = this.Invoke("PutMessage", new object[] {
                        JMJMessage});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPutMessage(string JMJMessage, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PutMessage", new object[] {
                        JMJMessage}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndPutMessage(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CredentialsHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMessageBag", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMessageBag(string AddresseeID, string DocumentType) {
            object[] results = this.Invoke("GetMessageBag", new object[] {
                        AddresseeID,
                        DocumentType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMessageBag(string AddresseeID, string DocumentType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMessageBag", new object[] {
                        AddresseeID,
                        DocumentType}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetMessageBag(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CredentialsHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Complete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Complete(string MessageID, int Status) {
            this.Invoke("Complete", new object[] {
                        MessageID,
                        Status});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginComplete(string MessageID, int Status, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Complete", new object[] {
                        MessageID,
                        Status}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndComplete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IPAddr", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string IPAddr() {
            object[] results = this.Invoke("IPAddr", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIPAddr(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IPAddr", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndIPAddr(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public class CredentialsHeader : System.Web.Services.Protocols.SoapHeader {
        
        /// <remarks/>
        public string User;
        
        /// <remarks/>
        public string Password;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr;
    }
}
